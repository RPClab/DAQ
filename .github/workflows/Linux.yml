name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  ROOT_VERSION: 6-20-04

jobs:
  job:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
        
      - name : Download ROOT
        if: steps.cache-root.outputs.cache-hit != 'true'
        id: ROOT
        shell: cmake -P {0}
        run: |
          set(root_url "https://github.com/root-project/root/archive/v$ENV{ROOT_VERSION}.tar.gz")
          file(DOWNLOAD "${root_url}" ./root.tar.gz SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./root.tar.gz)
    
      - name: Configure ROOT
        if: steps.cache-root.outputs.cache-hit != 'true'
        shell: cmake -P {0}
        run: | 
          execute_process(
             COMMAND cmake
            -S root-$ENV{ROOT_VERSION}
            -B build-root
            -D CMAKE_BUILD_TYPE=$ENV{BUILD_TYPE} -Dx11=OFF -Dbuiltin_gsl=OFF
          RESULT_VARIABLE result)
          if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
          endif()
    
      - name: Build ROOT
        if: steps.cache-root.outputs.cache-hit != 'true'
        shell: cmake -P {0}
        run: |
          execute_process(
            COMMAND cmake --build build-root
            RESULT_VARIABLE result
          )
          if (NOT result EQUAL 0)
            message(FATAL_ERROR "Bad exit status")
          endif()
        
      - name: Install ROOT
        run: sudo cmake --install
     
      - name: Setup CMake
        run: |
        mkdir "${{ runner.workspace }}/build"
        cd "${{ runner.workspace }}/build"
        cmake "${{GITHUB_WORKSPACE}}"
      - name: Build
        run: cmake --build .
        working-directory: ${{ runner.workspace }}/build      
      - name: Test
        run: ctest -V
        working-directory: ${{ runner.workspace }}/build
